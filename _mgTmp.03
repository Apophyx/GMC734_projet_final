% MotionGenesis file:  Main.txt
%--------------------------------------------------------------------
%   Physical objects.
NewtonianFrame  N                                   % The atmosphere
RigidBody       Plane                               % Where Z is the longitudinal axis
Particle        Pilot                               % 
Point           wing( Plane )           % Center of lift on the left wing
Point           stab( Plane )        % Center of lift on the horizontal stabilizer
%--------------------------------------------------------------------
%   Mathematical declarations.
Variable    x'', y''                 % The plane's positional coordinates and their derivatives
Constant    g = 9.80665 m/s^2            % Earth's gravitational acceleration.
Constant    Density = 1.225 kg / m^3      % Standard atmosphere Density
Constant    Thrust  = 1000 N                 % Thrust from engine. Engine torque is neglected
%Constant    Drag_profile =               % Profile drag, applied at the plane's CM, opposite it's velocity vector
Constant    x_wing = 1 m, y_wing = 0 m
Constant    x_stab = -2 m, y_stab = 0 m
Constant    S_wing= 20 m^2, S_stab= 10 m^2
Constant    alpha0 = 5 degrees
Planecm.Translate(No, x*Nx> + y*Ny>)
Plane.RotateZ(N, alpha0)
wing.SetPosition(Planeo, x_wing*Planex> + y_wing*Planey>)
stab.SetPosition(Planeo,  x_stab*Planex> + y_stab*Planey>)
Constant deflection = - 10 degrees
theta=GetAngleBetweenVectorsDegrees(Planex>, Ny>) %Used to define the sign of alpha
alpha_wing= (IsNegative(90-theta)*(-1)+IsPositive(90-theta)) * GetAngleBetweenVectorsDegrees(Planex>, Planecm.Getvelocity(N))
alpha_stab= alpha_wing + deflection
Cl_wing= 2*sin(alpha_wing)*cos(alpha_wing) %From Morris
Cl_stab= 2*sin(alpha_stab)*cos(alpha_stab) %From Morris
Cd_wing = 2*sin(alpha_wing)^2 %From Morris
Cd_stab = 2*sin(alpha_stab)^2 %From Morris
Lift_wing = 0.5*Density*Cl_wing*Dot(Planecm.GetVelocity(N), Planecm.GetVelocity(N))*S_wing
Lift_stab = 0.5*Density*Cl_wing*Dot(Planecm.GetVelocity(N), Planecm.GetVelocity(N))*S_stab
Drag_wing = 0.5*Density*Cl_wing*Dot(Planecm.GetVelocity(N), Planecm.GetVelocity(N))*S_wing
Drag_stab = 0.5*Density*Cl_wing*Dot(Planecm.GetVelocity(N), Planecm.GetVelocity(N))*S_stab
Constant r = 2 m
Constant h = 10 m
%   Mass and inertia properties.
Plane.SetMass( mPlane = 2300 lbm)
Pilot.SetMass( mPilot = 100 lbm)
Plane.SetInertia( Planecm,  IPlanexx = (mPlane*(3*r^2+h^2)/12),  IPlaneyy = (mPlane*(3*r^2+h^2)/12) ,  IPlanezz = 0.5*mPlane*r^2 ) %What approximations should we make?
%   Add relevant contact/distance forces.
System.AddForceGravity( -g*Ny> )            % Add's gravity force to each massive object.
wing.AddForce(Lift_wing*Planey>)
stab.AddForce(Lift_stab*Planey>) %replace Planey> with vector normal to stabilizer
wing.Addforce(Drag_wing*Planex>)
stab.Addforce(Drag_stab*Planex>) %replace Planex> with stabilizer direction vector
Planecm.AddForce(Thrust*Planex>)
Dynamics[1] = Dot(  Plane.GetDynamics(),  Nx>  )
Dynamics[2] = Dot(  Plane.GetDynamics(),  Ny>  )
Solve(Dynamics, x'', y'')
Input x=0 m, y=1000 m, x'=50 m/s, y'=0, tfinal = 100
Output      t sec,  x m, y m
OutputPlot  x m, y m

